<div>

				<h1>
Enunciado				</h1>

				<p>
				</p>

				<p>
Se quiere construir
un sistema de consulta de libros para una biblioteca. De cada libro
la biblioteca almacena: (1) un título, (2) una lista de autores,
(3) una referencia bibliográfica que debe ser única, (4) una lista
de descriptores y (5) un número de ejemplares disponibles.				</p>

				<p>
Por ejemplo:				</p>

				<p>
Título:
?Programación en Java?				</p>

				<p>
Autores:
?Luis Pérez?, ?Martín Suárez?				</p>

				<p>
Referencia:
?SIST-34543-WFR?				</p>

				<p>
Descriptores:
?Java?, ?Introducción a la programación?, ?Computadores?,
?Sistemas?				</p>

				<p>
Ejemplares
disponibles: 20				</p>

				<p>
El
sistema debe soportar siete requerimientos funcionales:				</p>

				<p>
RF1 ? Agregar un
nuevo libro				</p>

				<p>
RF2 ? Obtener la lista de libros que tienen
ciertas palabras dadas en el título. El usuario teclea una o varias
palabras separadas por un blanco y el sistema le presenta por
pantalla todos los libros que las incluyen todas en su título.				</p>

				<p>
RF3 ? Obtener la lista de libros escritos por
un autor. El usuario teclea el nombre y apellido de un autor y el
sistema le presenta por pantalla todos los libros de los cuales es
autor.				</p>

				<p>
RF4 ? Obtener la lista de libros que tienen
alguno de los descriptores dados. El usuario teclea hasta 3
descriptores completos y el sistema le presenta por pantalla todos
los libros que incluyen cualquiera de ellos.				</p>

				<p>
RF5 ? Pedir prestado un libro de la
biblioteca. El usuario lo debe seleccionar ya sea por su referencia
bibliográfica o a partir de las listas obtenidas en los
requerimientos anteriores.				</p>

				<p>
RF6 ? Devolver un libro prestado. El usuario
debe suministrar la referencia bibliográfica del mismo.				</p>

				<p>
RF7 ? Indicar el número total de libros
disponibles en la biblioteca y el número de libros que se
encuentran en préstamo en ese momento.				</p>

				<p>
Algunas restricciones:				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

El sistema debe almacenar los libros en una tabla de hashing, con
acceso por la referencia bibliográfica.				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

El sistema debe crear índices por palabras del título, autores y
descriptores, utilizando árboles AVL.				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

Sólo se pueden utilizar las estructuras de datos de Cupi2
Collections en su forma genérica, sin modificar por ningún motivo
su código				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

La actualización de la información del requerimiento 7 se debe
hacer utilizando MVC (observable + observador).				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

Todo el diseño debe estar desacoplado utilizando interfaces y
fábricas.				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

El sistema hace persistir la información utilizando serialización.
El ejercicio se debe entregar con al menos 20 libros
registrados.				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

El diseño de la interfaz de usuario corre por cuenta de cada grupo.
Debe estar implementada con Visual Editor.				</p>

				<p>

					<span>
·						<span>
						</span>
					</span>

Cada grupo debe entregar los documentos detallados de análisis y
diseño.				</p>

			</div>

		</body>

	